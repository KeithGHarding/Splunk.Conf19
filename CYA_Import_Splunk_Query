# Copyright 2019 Paychex, Inc.
# Licensed pursuant to the terms of the Apache License, Version 2.0 (the "License");
# your use of the Work is subject to the terms and conditions of the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor
# provides the Work (and each Contributor provides its Contributions) on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including,
# without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT,
# MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible
# for determining the appropriateness of using or redistributing the Work and assume 
# any risks associated with your exercise of permissions under this License.


| inputlookup MyCYA.csv
| table id Type title "eai:data" "eai:acl.sharing" "eai:acl.perms.read" "eai:acl.perms.write" search definition stanza value transform tag* filename fields_list collection external_type disabled description *cron* is_scheduled schedule_window action* alert* args errormsg validation earliest_time latest_time header_label label order display_location fields eventtypes REGEX FORMAT link.* search.* display.* type alias.* field* overwrite lookup.*
| foreach "eai:data" "eai:acl.sharing" "eai:acl.perms.read" "eai:acl.perms.write" search definition stanza value transform tag* filename fields_list collection external_type description *cron* is_scheduled schedule_window action* alert* args errormsg validation earliest_time latest_time header_label order display_location fields eventtypes REGEX FORMAT link.* search.* display.*  type alias.* label field* overwrite lookup.*
    [ rex field="<<FIELD>>" mode=sed "s:%:%25:g s:\t:%09:g s:\n:%0A:g s: :%20:g s:\ :%C2%A0:g s:\!:%21:g s:\":%22:g s:\#:%23:g s:\$:%24:g s:\&:%26:g s:\':%27:g s:\(:%28:g s:\):%29:g s:\*:%2A:g s:\+:%2B:g s:\,:%2C:g s:\-:%2D:g s:\.:%2E:g s:\/:%2F:g s:\::%3A:g s:\;:%3B:g s:\<:%3C:g s:\=:%3D:g s:\>:%3E:g s:\?:%3F:g s:\@:%40:g s:\[:%5B:g s:\\\:%5C:g s:\]:%5D:g s:\^:%5E:g s:\_:%5F:g s:\`:%60:g s:\`:%E2%82%AC:g s:\{:%7B:g s:\|:%7C:g s:\}:%7D:g s:\~:%7E:g s:\:%9D:g s:\¡:%C2%A1:g s:\¢:%C2%A2:g s:\£:%C2%A3:g s:\¤:%C2%A4:g s:\¥:%C2%A5:g s:\¦:%C2%A6:g s:\§:%C2%A7:g s:\¨:%C2%A8:g s:\©:%C2%A9:g s:\ª:%C2%AA:g s:\«:%C2%AB:g s:\¬:%C2%AC:g s:\®:%C2%AE:g s:\¯:%C2%AF:g s:\°:%C2%B0:g s:\±:%C2%B1:g s:\²:%C2%B2:g s:\³:%C2%B3:g s:\´:%C2%B4:g s:\µ:%C2%B5:g s:\¶:%C2%B6:g s:\·:%C2%B7:g s:\¸:%C2%B8:g s:\¹:%C2%B9:g s:\º:%C2%BA:g s:\»:%C2%BB:g s:\¼:%C2%BC:g s:\½:%C2%BD:g s:\¾:%C2%BE:g s:\¿:%C2%BF:g s:\À:%C3%80:g s:\Á:%C3%81:g s:\Â:%C3%82:g s:\Ã:%C3%83:g s:\Ä:%C3%84:g s:\Å:%C3%85:g s:\Æ:%C3%86:g s:\Ç:%C3%87:g s:\È:%C3%88:g s:\É:%C3%89:g s:\Ê:%C3%8A:g s:\Ë:%C3%8B:g s:\Ì:%C3%8C:g s:\Í:%C3%8D:g s:\Î:%C3%8E:g s:\Ï:%C3%8F:g s:\Ð:%C3%90:g s:\Ñ:%C3%91:g s:\Ò:%C3%92:g s:\Ó:%C3%93:g s:\Ô:%C3%94:g s:\Õ:%C3%95:g s:\Ö:%C3%96:g s:\×:%C3%97:g s:\Ø:%C3%98:g s:\Ù:%C3%99:g s:\Ú:%C3%9A:g s:\Û:%C3%9B:g s:\Ü:%C3%9C:g s:\Ý:%C3%9D:g s:\Þ:%C3%9E:g s:\ß:%C3%9F:g s:\à:%C3%A0:g s:\á:%C3%A1:g s:\â:%C3%A2:g s:\ã:%C3%A3:g s:\ä:%C3%A4:g s:\å:%C3%A5:g s:\æ:%C3%A6:g s:\ç:%C3%A7:g s:\è:%C3%A8:g s:\é:%C3%A9:g s:\ê:%C3%AA:g s:\ë:%C3%AB:g s:\ì:%C3%AC:g s:\í:%C3%AD:g s:\î:%C3%AE:g s:\ï:%C3%AF:g s:\ð:%C3%B0:g s:\ñ:%C3%B1:g s:\ò:%C3%B2:g s:\ó:%C3%B3:g s:\ô:%C3%B4:g s:\õ:%C3%B5:g s:\ö:%C3%B6:g s:\÷:%C3%B7:g s:\ø:%C3%B8:g s:\ù:%C3%B9:g s:\ú:%C3%BA:g s:\û:%C3%BB:g s:\ü:%C3%BC:g s:\ý:%C3%BD:g s:\þ:%C3%BE:g s:\ÿ:%C3%BF:g s:\Œ:%C5%92:g s:\œ:%C5%93:g s:\Š:%C5%A0:g s:\š:%C5%A1:g s:\Ÿ:%C5%B8:g s:\Ž:%C5%BD:g s:\ž:%C5%BE:g s:\ƒ:%C6%92:g s:\ˆ:%CB%86:g s:\˜:%CB%9C:g s:\–:%E2%80%93:g s:\—:%E2%80%94:g s:\‘:%E2%80%98:g s:\’:%E2%80%99:g s:\‚:%E2%80%9A:g s:\“:%E2%80%9C:g s:\”:%E2%80%9D:g s:\„:%E2%80%9E:g s:\†:%E2%80%A0:g s:\‡:%E2%80%A1:g s:\•:%E2%80%A2:g s:\…:%E2%80%A6:g s:\‰:%E2%80%B0:g s:\‹:%E2%80%B9:g s:\›:%E2%80:g s:\™:%E2%84:g"]
| rex field=id mode=sed "s/(https?:\/\/)[^\/]+/\1localhost:8089/g"
| eval Workflowtype=if(Type="Workflow actions", type, null())
| rename eai:acl.* as *
| foreach "eai:data" search definition stanza value transform tag* filename fields_list collection external_type description *cron* is_scheduled schedule_window action* alert* args errormsg validation earliest_time latest_time header_label order display_location fields eventtypes REGEX FORMAT link.* search.* display.* type alias.* label field* overwrite lookup.*
    [ eval restoreparametercreate=if(match("<<FIELD>>", "lookup\.field") AND Type="Automatic lookups", mvjoin(mvappend(restoreparametercreate, "-d <<FIELD>>=\"".coalesce('<<FIELD>>',"")."\""), " "),mvjoin(mvappend(restoreparametercreate, "-d <<FIELD>>=\"".'<<FIELD>>'."\""), " "))]
| foreach "eai:data" search definition value transform tag* filename fields_list collection external_type description *cron* is_scheduled schedule_window action* alert* args errormsg validation earliest_time latest_time header_label order display_location fields eventtypes REGEX FORMAT link.* search.* display.*  alias.* label overwrite lookup.*
    [ eval restoreparameterupdate=if(match("<<FIELD>>", "lookup\.field") AND Type="Automatic lookups", mvjoin(mvappend(restoreparameterupdate, "-d <<FIELD>>=\"".coalesce('<<FIELD>>',"")."\""), " "),mvjoin(mvappend(restoreparameterupdate, "-d <<FIELD>>=\"".'<<FIELD>>'."\""), " "))]
| foreach "sharing" "perms.read" "perms.write" owner
    [ eval restoreparameteracl=if(match("<<FIELD>>", "lookup\.field") AND Type="Automatic lookups", mvjoin(mvappend(restoreparameteracl, "-d <<FIELD>>=\"".coalesce('<<FIELD>>',"")."\""), " "),mvjoin(mvappend(restoreparameteracl, "-d <<FIELD>>=\"".'<<FIELD>>'."\""), " "))]
| rex field=restoreparameterupdate mode=sed "s/-d Workflowtype=/-d type=/g"
| eval AuthToken="PUT AUTH TOKEN HERE"
| eval createid=id
| rex mode=sed field=createid "s/(.*)\/[^\/]+$/\1/g"
| eval curlpowershellupdate="curl.exe -k -H \"Authorization: Splunk ".AuthToken."\" -X POST ".id." ".restoreparameterupdate
| eval curlpowershellupdate=if(len(curlpowershellupdate)>32766, "TOO BIG FOR CURL", curlpowershellupdate)
| eval curlpowershellcreate="curl.exe -k -H \"Authorization: Splunk ".AuthToken."\" -X POST ".createid." -d name=\"".title."\" ".restoreparametercreate
| eval curlpowershellcreate=if(len(curlpowershellcreate)>32766, "TOO BIG FOR CURL", curlpowershellcreate)
| eval curlpowershellacl="curl.exe -k -H \"Authorization: Splunk ".AuthToken."\" -X POST ".id."/acl ".restoreparameteracl
| eval curllinuxupdate="curl -k -H \"Authorization: Splunk ".AuthToken."\" -X POST ".id." ".restoreparameterupdate
| eval curllinuxupdate=if(len(curllinuxupdate)>32766, "TOO BIG FOR CURL", curllinuxupdate)
| eval curllinuxcreate="curl -k -H \"Authorization: Splunk ".AuthToken."\" -X POST ".createid." -d name=\"".title."\" ".restoreparametercreate
| eval curllinuxcreate=if(len(curllinuxcreate)>32766, "TOO BIG FOR CURL", curllinuxcreate)
| eval curllinuxacl="curl.exe -k -H \"Authorization: Splunk ".AuthToken."\" -X POST ".id."/acl ".restoreparameteracl | fields curl*
